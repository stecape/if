{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\PI\\\\if\\\\pages\\\\layouts\\\\App.js\";\nimport React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3)\n    },\n    textField: {\n      flexBasis: 200\n    }\n  };\n});\nexport default function App() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    Temperature: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      values = _React$useState2[0],\n      setValues = _React$useState2[1];\n\n  var handleChange = function handleChange(name) {\n    return function (event) {\n      setValues(_objectSpread({}, values, _defineProperty({}, name, event.target.value)));\n    };\n  };\n\n  return React.createElement(Container, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    color: \"primary\",\n    root: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"IF\"))), React.createElement(FormControl, {\n    fullWidth: true,\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"Temperature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Temperature\"), React.createElement(TextField, {\n    id: \"Temperature\",\n    label: \"Temperature\",\n    value: values.Temperature,\n    onChange: handleChange('Temperature'),\n    type: \"number\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"\\xB0F\")\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\Admin\\Documents\\PI\\if\\pages\\layouts\\App.js"],"names":["Typography","Container","AppBar","Toolbar","makeStyles","TextField","InputAdornment","InputLabel","FormControl","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","flexBasis","App","classes","React","useState","Temperature","values","setValues","handleChange","name","event","target","value","shrink","startAdornment"],"mappings":"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","sourcesContent":["import Typography from '@material-ui/core/Typography'\r\nimport Container from '@material-ui/core/Container'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport InputLabel from '@material-ui/core/InputLabel' \r\nimport FormControl from '@material-ui/core/FormControl'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n}));\r\n\r\n\r\nexport default function App () {\r\n  const classes = useStyles()\r\n  const [values, setValues] = React.useState({\r\n    Temperature: '',\r\n  })\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n  return (\r\n    <Container className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\" root>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            IF\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <FormControl fullWidth className={classes.margin}>\r\n        <InputLabel htmlFor=\"Temperature\">Temperature</InputLabel>\r\n        <TextField\r\n          id=\"Temperature\"\r\n          label=\"Temperature\"\r\n          value={values.Temperature}\r\n          onChange={handleChange('Temperature')}\r\n          type=\"number\"\r\n          className={classes.textField}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          InputProps={{\r\n            startAdornment: <InputAdornment position=\"start\">Â°F</InputAdornment>,\r\n          }}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n        />\r\n      </FormControl>\r\n    </Container>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}